{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Loginscreen = function Loginscreen() {\n  var onPressLogin = function onPressLogin() {};\n  var onPressForgotPassword = function onPressForgotPassword() {};\n  var onPressSignUp = function onPressSignUp() {};\n  var _useState = useState({\n      email: '',\n      password: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \" Login Screen\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: [styles.inputText, styles.emailInput],\n        placeholder: \"Email\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setState({\n            email: text\n          });\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: [styles.inputText, styles.passwordInput],\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setState({\n            password: text\n          });\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressForgotPassword,\n      children: _jsx(Text, {\n        style: styles.forgotAndSignUpText,\n        children: \"Forgot Password?\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressLogin,\n      style: styles.loginBtn,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"LOGIN \"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressSignUp,\n      children: _jsx(Text, {\n        style: styles.forgotAndSignUpText,\n        children: \"Signup\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#4FD3DA',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#3AB4BA\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgotAndSignUpText: {\n    color: \"white\",\n    fontSize: 30\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  emailInput: {\n    fontSize: 18\n  },\n  passwordInput: {\n    fontSize: 18\n  }\n});\nexport default Loginscreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Loginscreen","onPressLogin","onPressForgotPassword","onPressSignUp","_useState","email","password","_useState2","_slicedToArray","state","setState","style","styles","container","children","title","inputView","inputText","emailInput","placeholder","placeholderTextColor","onChangeText","text","passwordInput","secureTextEntry","onPress","forgotAndSignUpText","loginBtn","loginText","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop"],"sources":["D:/MASOOD UNI/wheelhub/screens/Loginscreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n\r\nStyleSheet,\r\nText,\r\n\r\nView,\r\nTextInput,\r\nTouchableOpacity,\r\n} from 'react-native';\r\n\r\nconst Loginscreen =  () => {\r\nconst onPressLogin = () => {\r\n// Do something about login operation\r\n};\r\nconst onPressForgotPassword = () => {\r\n// Do something about forgot password operation\r\n};\r\nconst onPressSignUp = () => {\r\n// Do something about signup operation\r\n};\r\nconst [state,setState] = useState({\r\nemail: '',\r\npassword: '',\r\n})\r\nreturn (\r\n<View style={styles.container}>\r\n<Text style={styles.title}> Login Screen</Text>\r\n<View style={styles.inputView}>\r\n<TextInput\r\n          style={[styles.inputText, styles.emailInput]}\r\n          placeholder=\"Email\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(text) => setState({ email: text })}\r\n        />\r\n</View>\r\n<View style={styles.inputView}>\r\n<TextInput\r\n          style={[styles.inputText, styles.passwordInput]}\r\n          secureTextEntry\r\n          placeholder=\"Password\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(text) => setState({ password: text })}\r\n        />\r\n</View>\r\n<TouchableOpacity\r\nonPress = {onPressForgotPassword}>\r\n<Text style={styles.forgotAndSignUpText}>Forgot Password?</Text>\r\n</TouchableOpacity>\r\n<TouchableOpacity\r\nonPress = {onPressLogin}\r\nstyle={styles.loginBtn}>\r\n<Text style={styles.loginText}>LOGIN </Text>\r\n</TouchableOpacity>\r\n<TouchableOpacity\r\nonPress = {onPressSignUp}>\r\n<Text style={styles.forgotAndSignUpText}>Signup</Text>\r\n</TouchableOpacity>\r\n</View>\r\n);\r\n}\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\nflex: 1,\r\nbackgroundColor: '#4FD3DA',\r\nalignItems: 'center',\r\njustifyContent: 'center',\r\n},\r\ntitle:{\r\nfontWeight: \"bold\",\r\nfontSize:50,\r\ncolor:\"#fb5b5a\",\r\nmarginBottom: 40,\r\n},\r\ninputView:{\r\nwidth:\"80%\",\r\nbackgroundColor:\"#3AB4BA\",\r\nborderRadius:25,\r\nheight:50,\r\nmarginBottom:20,\r\njustifyContent:\"center\",\r\npadding:20\r\n},\r\ninputText:{\r\nheight:50,\r\ncolor:\"white\"\r\n},\r\nforgotAndSignUpText:{\r\ncolor:\"white\",\r\nfontSize:30,\r\n},\r\nloginBtn:{\r\nwidth:\"80%\",\r\nbackgroundColor:\"#fb5b5a\",\r\nborderRadius:25,\r\nheight:50,\r\nalignItems:\"center\",\r\njustifyContent:\"center\",\r\nmarginTop:40,\r\nmarginBottom:10\r\n},\r\n\r\n  emailInput: {\r\n    // Add specific styles for the email input here\r\n    fontSize: 18, // Set the desired font size\r\n    // You can add other styles specific to the email input here\r\n  },\r\n  passwordInput: {\r\n    // Add specific styles for the password input here\r\n    fontSize: 18, // Set the desired font size\r\n    // You can add other styles specific to the password input here\r\n  },\r\n});\r\nexport default Loginscreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}