{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport { auth, storage } from \"../database/dbconfig\";\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nvar useStorage = function useStorage() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    progress = _useState2[0],\n    setProgress = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    url = _useState6[0],\n    setUrl = _useState6[1];\n  var uploadFile = function () {\n    var _ref = _asyncToGenerator(function* (fileUri, folderName) {\n      try {\n        var response = yield fetch(fileUri);\n        var blob = yield response.blob();\n        var uniqueFileName = `${new Date().getTime()}_${Math.floor(Math.random() * 10000)}`;\n        var fileRef = ref(storage, `${folderName}/${uniqueFileName}`);\n        yield uploadBytes(fileRef, blob);\n        var downloadUrl = yield getDownloadURL(fileRef);\n        return downloadUrl;\n      } catch (err) {\n        console.error('Error uploading file: ', err);\n        setError(err);\n        return null;\n      }\n    });\n    return function uploadFile(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var uploadProfilePicture = function () {\n    var _ref2 = _asyncToGenerator(function* (fileUri) {\n      return uploadFile(fileUri, 'profilePictures');\n    });\n    return function uploadProfilePicture(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var uploadCarPictures = function () {\n    var _ref3 = _asyncToGenerator(function* (carPic) {\n      var downloadUrl = yield uploadFile(carPic, 'carPictures/001');\n      return downloadUrl;\n    });\n    return function uploadCarPictures(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return {\n    progress: progress,\n    url: url,\n    error: error,\n    uploadProfilePicture: uploadProfilePicture,\n    uploadCarPictures: uploadCarPictures\n  };\n};\nexport default useStorage;","map":{"version":3,"names":["useState","auth","storage","ref","uploadBytes","getDownloadURL","useStorage","_useState","_useState2","_slicedToArray","progress","setProgress","_useState3","_useState4","error","setError","_useState5","_useState6","url","setUrl","uploadFile","_ref","_asyncToGenerator","fileUri","folderName","response","fetch","blob","uniqueFileName","Date","getTime","Math","floor","random","fileRef","downloadUrl","err","console","_x","_x2","apply","arguments","uploadProfilePicture","_ref2","_x3","uploadCarPictures","_ref3","carPic","_x4"],"sources":["D:/MASOOD UNI/wheelhub/hooks/storage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { auth, storage } from '../database/dbconfig';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\n\r\nconst useStorage = () => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  const uploadFile = async (fileUri, folderName) => {\r\n    try {\r\n      const response = await fetch(fileUri);\r\n      const blob = await response.blob();\r\n      const uniqueFileName = `${new Date().getTime()}_${Math.floor(\r\n        Math.random() * 10000\r\n      )}`;\r\n      const fileRef = ref(storage, `${folderName}/${uniqueFileName}`);\r\n      await uploadBytes(fileRef, blob);\r\n      const downloadUrl = await getDownloadURL(fileRef);\r\n      return downloadUrl;\r\n    } catch (err) {\r\n      console.error('Error uploading file: ', err);\r\n      setError(err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const uploadProfilePicture = async (fileUri) => {\r\n    return uploadFile(fileUri, 'profilePictures');\r\n  };\r\n\r\n  const uploadCarPictures = async (carPic) => {\r\n    const downloadUrl = await uploadFile(carPic, 'carPictures/001');\r\n\r\n    return downloadUrl;\r\n  };\r\n\r\n  return {\r\n    progress,\r\n    url,\r\n    error,\r\n    uploadProfilePicture,\r\n    uploadCarPictures,\r\n  };\r\n};\r\n\r\nexport default useStorage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,OAAO;AACtB,SAASC,GAAG,EAAEC,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAEnE,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAAC,SAAA,GAAgCP,QAAQ,CAAC,CAAC,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAA0BZ,QAAQ,CAAC,IAAI,CAAC;IAAAa,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAsBhB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA7BE,GAAG,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAElB,IAAMG,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,OAAO,EAAEC,UAAU,EAAK;MAChD,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAACH,OAAO,CAAC;QACrC,IAAMI,IAAI,SAASF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAMC,cAAc,GAAI,GAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAE,IAAGC,IAAI,CAACC,KAAK,CAC1DD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAClB,CAAE,EAAC;QACH,IAAMC,OAAO,GAAG/B,GAAG,CAACD,OAAO,EAAG,GAAEsB,UAAW,IAAGI,cAAe,EAAC,CAAC;QAC/D,MAAMxB,WAAW,CAAC8B,OAAO,EAAEP,IAAI,CAAC;QAChC,IAAMQ,WAAW,SAAS9B,cAAc,CAAC6B,OAAO,CAAC;QACjD,OAAOC,WAAW;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACvB,KAAK,CAAC,wBAAwB,EAAEsB,GAAG,CAAC;QAC5CrB,QAAQ,CAACqB,GAAG,CAAC;QACb,OAAO,IAAI;MACb;IACF,CAAC;IAAA,gBAhBKhB,UAAUA,CAAAkB,EAAA,EAAAC,GAAA;MAAA,OAAAlB,IAAA,CAAAmB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgBf;EAED,IAAMC,oBAAoB;IAAA,IAAAC,KAAA,GAAArB,iBAAA,CAAG,WAAOC,OAAO,EAAK;MAC9C,OAAOH,UAAU,CAACG,OAAO,EAAE,iBAAiB,CAAC;IAC/C,CAAC;IAAA,gBAFKmB,oBAAoBA,CAAAE,GAAA;MAAA,OAAAD,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAEzB;EAED,IAAMI,iBAAiB;IAAA,IAAAC,KAAA,GAAAxB,iBAAA,CAAG,WAAOyB,MAAM,EAAK;MAC1C,IAAMZ,WAAW,SAASf,UAAU,CAAC2B,MAAM,EAAE,iBAAiB,CAAC;MAE/D,OAAOZ,WAAW;IACpB,CAAC;IAAA,gBAJKU,iBAAiBA,CAAAG,GAAA;MAAA,OAAAF,KAAA,CAAAN,KAAA,OAAAC,SAAA;IAAA;EAAA,GAItB;EAED,OAAO;IACL/B,QAAQ,EAARA,QAAQ;IACRQ,GAAG,EAAHA,GAAG;IACHJ,KAAK,EAALA,KAAK;IACL4B,oBAAoB,EAApBA,oBAAoB;IACpBG,iBAAiB,EAAjBA;EACF,CAAC;AACH,CAAC;AAED,eAAevC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}