{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useResponsiveScreenFontSize = exports.useResponsiveScreenWidth = exports.useResponsiveScreenHeight = exports.useResponsiveFontSize = exports.useResponsiveWidth = exports.useResponsiveHeight = exports.responsiveScreenFontSize = exports.responsiveScreenWidth = exports.responsiveScreenHeight = exports.responsiveFontSize = exports.responsiveWidth = exports.responsiveHeight = exports.useDimensionsChange = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar useDimensionsListener = function useDimensionsListener() {\n  var _useState = (0, _react.useState)(_reactNative.Dimensions.get(\"screen\")),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    screenDimension = _useState2[0],\n    setScreenDimension = _useState2[1];\n  var _useState3 = (0, _react.useState)(_reactNative.Dimensions.get(\"window\")),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    windowDimension = _useState4[0],\n    setWindowDimension = _useState4[1];\n  (0, _react.useEffect)(function () {\n    function handleDimensionChange(_ref) {\n      var window = _ref.window,\n        screen = _ref.screen;\n      setWindowDimension(window);\n      setScreenDimension(screen);\n    }\n    _reactNative.Dimensions.addEventListener(\"change\", handleDimensionChange);\n    return function () {\n      _reactNative.Dimensions.removeEventListener(\"change\", handleDimensionChange);\n    };\n  }, []);\n  return {\n    screen: screenDimension,\n    window: windowDimension\n  };\n};\nvar percentageCalculation = function percentageCalculation(max, val) {\n  return max * (val / 100);\n};\nvar fontCalculation = function fontCalculation(height, width, val) {\n  var widthDimension = height > width ? width : height;\n  var aspectRatioBasedHeight = 16 / 9 * widthDimension;\n  return percentageCalculation(Math.sqrt(Math.pow(aspectRatioBasedHeight, 2) + Math.pow(widthDimension, 2)), val);\n};\nvar useDimensionsChange = function useDimensionsChange(effect) {\n  var hasMountRef = (0, _react.useRef)(false);\n  var dimensions = useDimensionsListener();\n  (0, _react.useEffect)(function () {\n    if (hasMountRef.current) {\n      var destroy = effect(dimensions);\n      var cleanUp = function cleanUp() {\n        return null;\n      };\n      if (typeof destroy === \"function\") {\n        cleanUp = destroy;\n      }\n      return function () {\n        return cleanUp();\n      };\n    } else {\n      hasMountRef.current = true;\n    }\n  }, [dimensions, effect]);\n};\nexports.useDimensionsChange = useDimensionsChange;\nvar responsiveHeight = function responsiveHeight(h) {\n  var _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n    height = _Dimensions$get.height;\n  return percentageCalculation(height, h);\n};\nexports.responsiveHeight = responsiveHeight;\nvar responsiveWidth = function responsiveWidth(w) {\n  var _Dimensions$get2 = _reactNative.Dimensions.get(\"window\"),\n    width = _Dimensions$get2.width;\n  return percentageCalculation(width, w);\n};\nexports.responsiveWidth = responsiveWidth;\nvar responsiveFontSize = function responsiveFontSize(f) {\n  var _Dimensions$get3 = _reactNative.Dimensions.get(\"window\"),\n    height = _Dimensions$get3.height,\n    width = _Dimensions$get3.width;\n  return fontCalculation(height, width, f);\n};\nexports.responsiveFontSize = responsiveFontSize;\nvar responsiveScreenHeight = function responsiveScreenHeight(h) {\n  var _Dimensions$get4 = _reactNative.Dimensions.get(\"screen\"),\n    height = _Dimensions$get4.height;\n  return percentageCalculation(height, h);\n};\nexports.responsiveScreenHeight = responsiveScreenHeight;\nvar responsiveScreenWidth = function responsiveScreenWidth(w) {\n  var _Dimensions$get5 = _reactNative.Dimensions.get(\"screen\"),\n    width = _Dimensions$get5.width;\n  return percentageCalculation(width, w);\n};\nexports.responsiveScreenWidth = responsiveScreenWidth;\nvar responsiveScreenFontSize = function responsiveScreenFontSize(f) {\n  var _Dimensions$get6 = _reactNative.Dimensions.get(\"screen\"),\n    height = _Dimensions$get6.height,\n    width = _Dimensions$get6.width;\n  return fontCalculation(height, width, f);\n};\nexports.responsiveScreenFontSize = responsiveScreenFontSize;\nvar useResponsiveHeight = function useResponsiveHeight(h) {\n  var height = useDimensionsListener().window.height;\n  return percentageCalculation(height, h);\n};\nexports.useResponsiveHeight = useResponsiveHeight;\nvar useResponsiveWidth = function useResponsiveWidth(w) {\n  var width = useDimensionsListener().window.width;\n  return percentageCalculation(width, w);\n};\nexports.useResponsiveWidth = useResponsiveWidth;\nvar useResponsiveFontSize = function useResponsiveFontSize(f) {\n  var _useDimensionsListene = useDimensionsListener().window,\n    height = _useDimensionsListene.height,\n    width = _useDimensionsListene.width;\n  return fontCalculation(height, width, f);\n};\nexports.useResponsiveFontSize = useResponsiveFontSize;\nvar useResponsiveScreenHeight = function useResponsiveScreenHeight(h) {\n  var height = useDimensionsListener().screen.height;\n  return percentageCalculation(height, h);\n};\nexports.useResponsiveScreenHeight = useResponsiveScreenHeight;\nvar useResponsiveScreenWidth = function useResponsiveScreenWidth(w) {\n  var width = useDimensionsListener().screen.width;\n  return percentageCalculation(width, w);\n};\nexports.useResponsiveScreenWidth = useResponsiveScreenWidth;\nvar useResponsiveScreenFontSize = function useResponsiveScreenFontSize(f) {\n  var _useDimensionsListene2 = useDimensionsListener().screen,\n    height = _useDimensionsListene2.height,\n    width = _useDimensionsListene2.width;\n  return fontCalculation(height, width, f);\n};\nexports.useResponsiveScreenFontSize = useResponsiveScreenFontSize;","map":{"version":3,"names":["_react","require","_reactNative","useDimensionsListener","_useState","useState","Dimensions","get","_useState2","_slicedToArray2","default","screenDimension","setScreenDimension","_useState3","_useState4","windowDimension","setWindowDimension","useEffect","handleDimensionChange","_ref","window","screen","addEventListener","removeEventListener","percentageCalculation","max","val","fontCalculation","height","width","widthDimension","aspectRatioBasedHeight","Math","sqrt","pow","useDimensionsChange","effect","hasMountRef","useRef","dimensions","current","destroy","cleanUp","responsiveHeight","h","_Dimensions$get","responsiveWidth","w","_Dimensions$get2","responsiveFontSize","f","_Dimensions$get3","responsiveScreenHeight","_Dimensions$get4","responsiveScreenWidth","_Dimensions$get5","responsiveScreenFontSize","_Dimensions$get6","useResponsiveHeight","useResponsiveWidth","useResponsiveFontSize","_useDimensionsListene","useResponsiveScreenHeight","useResponsiveScreenWidth","useResponsiveScreenFontSize","_useDimensionsListene2"],"sources":["D:\\MASOOD UNI\\wheelhub\\node_modules\\react-native-responsive-dimensions\\lib\\module\\index.ts"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Dimensions, ScaledSize } from \"react-native\";\n\nconst useDimensionsListener = () => {\n  const [screenDimension, setScreenDimension] = useState(\n    Dimensions.get(\"screen\")\n  );\n  const [windowDimension, setWindowDimension] = useState(\n    Dimensions.get(\"window\")\n  );\n\n  useEffect(() => {\n    function handleDimensionChange({\n      window,\n      screen\n    }: {\n      window: ScaledSize;\n      screen: ScaledSize;\n    }) {\n      setWindowDimension(window);\n      setScreenDimension(screen);\n    }\n\n    Dimensions.addEventListener(\"change\", handleDimensionChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", handleDimensionChange);\n    };\n  }, []);\n\n  return {\n    screen: screenDimension,\n    window: windowDimension\n  };\n};\n\ntype EffectParams = {\n  screen: ScaledSize;\n  window: ScaledSize;\n};\n\ntype EffectCallback =\n  | ((opts: EffectParams) => () => any)\n  | ((opts: EffectParams) => undefined)\n  | ((opts: EffectParams) => void);\n\nconst percentageCalculation = (max: number, val: number) => max * (val / 100);\n\nconst fontCalculation = (height: number, width: number, val: number) => {\n  const widthDimension = height > width ? width : height;\n  const aspectRatioBasedHeight = (16 / 9) * widthDimension;\n  return percentageCalculation(\n    Math.sqrt(\n      Math.pow(aspectRatioBasedHeight, 2) + Math.pow(widthDimension, 2)\n    ),\n    val\n  );\n};\n\nexport const useDimensionsChange = (effect: EffectCallback) => {\n  const hasMountRef = useRef(false);\n  const dimensions = useDimensionsListener();\n\n  useEffect(() => {\n    if (hasMountRef.current) {\n      const destroy = effect(dimensions);\n      let cleanUp: any = () => null;\n      if (typeof destroy === \"function\") {\n        cleanUp = destroy;\n      }\n      return () => cleanUp();\n    } else {\n      hasMountRef.current = true;\n    }\n  }, [dimensions, effect]);\n};\n\nexport const responsiveHeight = (h: number) => {\n  const { height } = Dimensions.get(\"window\");\n  return percentageCalculation(height, h);\n};\n\nexport const responsiveWidth = (w: number) => {\n  const { width } = Dimensions.get(\"window\");\n  return percentageCalculation(width, w);\n};\n\nexport const responsiveFontSize = (f: number) => {\n  const { height, width } = Dimensions.get(\"window\");\n  return fontCalculation(height, width, f);\n};\n\nexport const responsiveScreenHeight = (h: number) => {\n  const { height } = Dimensions.get(\"screen\");\n  return percentageCalculation(height, h);\n};\n\nexport const responsiveScreenWidth = (w: number) => {\n  const { width } = Dimensions.get(\"screen\");\n  return percentageCalculation(width, w);\n};\n\nexport const responsiveScreenFontSize = (f: number) => {\n  const { height, width } = Dimensions.get(\"screen\");\n  return fontCalculation(height, width, f);\n};\n\nexport const useResponsiveHeight = (h: number) => {\n  const { height } = useDimensionsListener().window;\n  return percentageCalculation(height, h);\n};\n\nexport const useResponsiveWidth = (w: number) => {\n  const { width } = useDimensionsListener().window;\n  return percentageCalculation(width, w);\n};\n\nexport const useResponsiveFontSize = (f: number) => {\n  const { height, width } = useDimensionsListener().window;\n  return fontCalculation(height, width, f);\n};\n\nexport const useResponsiveScreenHeight = (h: number) => {\n  const { height } = useDimensionsListener().screen;\n  return percentageCalculation(height, h);\n};\n\nexport const useResponsiveScreenWidth = (w: number) => {\n  const { width } = useDimensionsListener().screen;\n  return percentageCalculation(width, w);\n};\n\nexport const useResponsiveScreenFontSize = (f: number) => {\n  const { height, width } = useDimensionsListener().screen;\n  return fontCalculation(height, width, f);\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwBA,CAAA,EAAM;EAAA,IAAAC,SAAA,GACY,IAAAJ,MAAA,CAAAK,QAAA,EAC5CH,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CAD4C,CADZ;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAN,SAAA;IAC3BO,eAD2B,GAAAH,UAAA;IACVI,kBADU,GAAAJ,UAAA;EAAA,IAAAK,UAAA,GAIY,IAAAb,MAAA,CAAAK,QAAA,EAC5CH,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CAD4C,CAJZ;IAAAO,UAAA,OAAAL,eAAA,CAAAC,OAAA,EAAAG,UAAA;IAI3BE,eAJ2B,GAAAD,UAAA;IAIVE,kBAJU,GAAAF,UAAA;EAQlC,IAAAd,MAAA,CAAAiB,SAAA,EAAU,YAAM;IACd,SAASC,qBAATA,CAAAC,IAAA,EAMG;MAAA,IALDC,MAKC,GAAAD,IAAA,CALDC,MAKC;QAJDC,MAIC,GAAAF,IAAA,CAJDE,MAIC;MACDL,kBAAkB,CAACI,MAAD,CAAlB;MACAR,kBAAkB,CAACS,MAAD,CAAlB;IACD;IAEDnB,YAAA,CAAAI,UAAA,CAAWgB,gBAAX,CAA4B,QAA5B,EAAsCJ,qBAAtC;IACA,OAAO,YAAM;MACXhB,YAAA,CAAAI,UAAA,CAAWiB,mBAAX,CAA+B,QAA/B,EAAyCL,qBAAzC;IACD,CAFD;EAGD,CAhBD,EAgBG,EAhBH;EAkBA,OAAO;IACLG,MAAM,EAAEV,eADH;IAELS,MAAM,EAAEL;EAFH,CAAP;AAID,CA9BD;AA0CA,IAAMS,qBAAqB,GAAG,SAAxBA,qBAAwBA,CAACC,GAAD,EAAcC,GAAd;EAAA,OAA8BD,GAAG,IAAIC,GAAG,GAAG,GAAV,CAAjC;AAAA,CAA9B;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkBA,CAACC,MAAD,EAAiBC,KAAjB,EAAgCH,GAAhC,EAAgD;EACtE,IAAMI,cAAc,GAAGF,MAAM,GAAGC,KAAT,GAAiBA,KAAjB,GAAyBD,MAAhD;EACA,IAAMG,sBAAsB,GAAI,KAAK,CAAN,GAAWD,cAA1C;EACA,OAAON,qBAAqB,CAC1BQ,IAAI,CAACC,IAAL,CACED,IAAI,CAACE,GAAL,CAASH,sBAAT,EAAiC,CAAjC,IAAsCC,IAAI,CAACE,GAAL,CAASJ,cAAT,EAAyB,CAAzB,CADxC,CAD0B,EAI1BJ,GAJ0B,CAA5B;AAMD,CATD;AAWO,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsBA,CAACC,MAAD,EAA4B;EAC7D,IAAMC,WAAW,GAAG,IAAArC,MAAA,CAAAsC,MAAA,EAAO,KAAP,CAApB;EACA,IAAMC,UAAU,GAAGpC,qBAAqB,EAAxC;EAEA,IAAAH,MAAA,CAAAiB,SAAA,EAAU,YAAM;IACd,IAAIoB,WAAW,CAACG,OAAhB,EAAyB;MACvB,IAAMC,OAAO,GAAGL,MAAM,CAACG,UAAD,CAAtB;MACA,IAAIG,OAAY,GAAG,SAAAA,QAAA;QAAA,OAAM,IAAN;MAAA,CAAnB;MACA,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;QACjCC,OAAO,GAAGD,OAAV;MACD;MACD,OAAO;QAAA,OAAMC,OAAO,EAAb;MAAA,CAAP;IACD,CAPD,MAOO;MACLL,WAAW,CAACG,OAAZ,GAAsB,IAAtB;IACD;EACF,CAXD,EAWG,CAACD,UAAD,EAAaH,MAAb,CAXH;AAYD,CAhBM;;AAkBA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmBA,CAACC,CAAD,EAAe;EAAA,IAAAC,eAAA,GAC1B3C,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CAD0B;IACrCqB,MADqC,GAAAiB,eAAA,CACrCjB,MADqC;EAE7C,OAAOJ,qBAAqB,CAACI,MAAD,EAASgB,CAAT,CAA5B;AACD,CAHM;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkBA,CAACC,CAAD,EAAe;EAAA,IAAAC,gBAAA,GAC1B9C,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CAD0B;IACpCsB,KADoC,GAAAmB,gBAAA,CACpCnB,KADoC;EAE5C,OAAOL,qBAAqB,CAACK,KAAD,EAAQkB,CAAR,CAA5B;AACD,CAHM;;AAKA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqBA,CAACC,CAAD,EAAe;EAAA,IAAAC,gBAAA,GACrBjD,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CADqB;IACvCqB,MADuC,GAAAuB,gBAAA,CACvCvB,MADuC;IAC/BC,KAD+B,GAAAsB,gBAAA,CAC/BtB,KAD+B;EAE/C,OAAOF,eAAe,CAACC,MAAD,EAASC,KAAT,EAAgBqB,CAAhB,CAAtB;AACD,CAHM;;AAKA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyBA,CAACR,CAAD,EAAe;EAAA,IAAAS,gBAAA,GAChCnD,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CADgC;IAC3CqB,MAD2C,GAAAyB,gBAAA,CAC3CzB,MAD2C;EAEnD,OAAOJ,qBAAqB,CAACI,MAAD,EAASgB,CAAT,CAA5B;AACD,CAHM;;AAKA,IAAMU,qBAAqB,GAAG,SAAxBA,qBAAwBA,CAACP,CAAD,EAAe;EAAA,IAAAQ,gBAAA,GAChCrD,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CADgC;IAC1CsB,KAD0C,GAAA0B,gBAAA,CAC1C1B,KAD0C;EAElD,OAAOL,qBAAqB,CAACK,KAAD,EAAQkB,CAAR,CAA5B;AACD,CAHM;;AAKA,IAAMS,wBAAwB,GAAG,SAA3BA,wBAA2BA,CAACN,CAAD,EAAe;EAAA,IAAAO,gBAAA,GAC3BvD,YAAA,CAAAI,UAAA,CAAWC,GAAX,CAAe,QAAf,CAD2B;IAC7CqB,MAD6C,GAAA6B,gBAAA,CAC7C7B,MAD6C;IACrCC,KADqC,GAAA4B,gBAAA,CACrC5B,KADqC;EAErD,OAAOF,eAAe,CAACC,MAAD,EAASC,KAAT,EAAgBqB,CAAhB,CAAtB;AACD,CAHM;;AAKA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsBA,CAACd,CAAD,EAAe;EAAA,IACxChB,MADwC,GAC7BzB,qBAAqB,GAAGiB,MADK,CACxCQ,MADwC;EAEhD,OAAOJ,qBAAqB,CAACI,MAAD,EAASgB,CAAT,CAA5B;AACD,CAHM;;AAKA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqBA,CAACZ,CAAD,EAAe;EAAA,IACvClB,KADuC,GAC7B1B,qBAAqB,GAAGiB,MADK,CACvCS,KADuC;EAE/C,OAAOL,qBAAqB,CAACK,KAAD,EAAQkB,CAAR,CAA5B;AACD,CAHM;;AAKA,IAAMa,qBAAqB,GAAG,SAAxBA,qBAAwBA,CAACV,CAAD,EAAe;EAAA,IAAAW,qBAAA,GACxB1D,qBAAqB,GAAGiB,MADA;IAC1CQ,MAD0C,GAAAiC,qBAAA,CAC1CjC,MAD0C;IAClCC,KADkC,GAAAgC,qBAAA,CAClChC,KADkC;EAElD,OAAOF,eAAe,CAACC,MAAD,EAASC,KAAT,EAAgBqB,CAAhB,CAAtB;AACD,CAHM;;AAKA,IAAMY,yBAAyB,GAAG,SAA5BA,yBAA4BA,CAAClB,CAAD,EAAe;EAAA,IAC9ChB,MAD8C,GACnCzB,qBAAqB,GAAGkB,MADW,CAC9CO,MAD8C;EAEtD,OAAOJ,qBAAqB,CAACI,MAAD,EAASgB,CAAT,CAA5B;AACD,CAHM;;AAKA,IAAMmB,wBAAwB,GAAG,SAA3BA,wBAA2BA,CAAChB,CAAD,EAAe;EAAA,IAC7ClB,KAD6C,GACnC1B,qBAAqB,GAAGkB,MADW,CAC7CQ,KAD6C;EAErD,OAAOL,qBAAqB,CAACK,KAAD,EAAQkB,CAAR,CAA5B;AACD,CAHM;;AAKA,IAAMiB,2BAA2B,GAAG,SAA9BA,2BAA8BA,CAACd,CAAD,EAAe;EAAA,IAAAe,sBAAA,GAC9B9D,qBAAqB,GAAGkB,MADM;IAChDO,MADgD,GAAAqC,sBAAA,CAChDrC,MADgD;IACxCC,KADwC,GAAAoC,sBAAA,CACxCpC,KADwC;EAExD,OAAOF,eAAe,CAACC,MAAD,EAASC,KAAT,EAAgBqB,CAAhB,CAAtB;AACD,CAHM"},"metadata":{},"sourceType":"script","externalDependencies":[]}