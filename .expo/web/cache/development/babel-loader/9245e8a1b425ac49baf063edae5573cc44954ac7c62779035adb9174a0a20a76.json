{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useAuth from \"../hooks/auth\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Loginscreen = function Loginscreen() {\n  var _useAuth = useAuth(),\n    signIn = _useAuth.signIn;\n  var navigation = useNavigation();\n  var _useState = useState({\n      email: '',\n      password: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    credentials = _useState2[0],\n    setCredentials = _useState2[1];\n  var onPressLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        if (!credentials.email || !credentials.password) {\n          Alert.alert('Invalid Input', 'Please enter both email and password.');\n          return;\n        }\n        yield signIn(credentials.email, credentials.password);\n        navigation.navigate('Home');\n      } catch (error) {\n        if (error.code === 'auth/invalid-credential') {\n          Alert.alert('Login Failed', 'Invalid email or password. Please check your credentials and try again.');\n        } else {\n          Alert.alert('Login Failed', 'An unexpected error occurred. Please try again later.');\n        }\n      }\n    });\n    return function onPressLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onPressForgotPassword = function onPressForgotPassword() {};\n  var onPressSignUp = function onPressSignUp() {\n    navigation.navigate('SignUp');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login Screen\"\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: [styles.inputText, styles.emailInput],\n        placeholder: \"Email\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setCredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n            email: text\n          }));\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputView,\n      children: _jsx(TextInput, {\n        style: [styles.inputText, styles.passwordInput],\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return setCredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n            password: text\n          }));\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressForgotPassword,\n      children: _jsx(Text, {\n        style: styles.forgotAndSignUpText,\n        children: \"Forgot Password?\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressLogin,\n      style: styles.loginBtn,\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"LOGIN\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressSignUp,\n      children: _jsx(Text, {\n        style: styles.forgotAndSignUpText,\n        children: \"Signup\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#4FD3DA',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#3AB4BA\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgotAndSignUpText: {\n    color: \"white\",\n    fontSize: 30\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  emailInput: {\n    fontSize: 18\n  },\n  passwordInput: {\n    fontSize: 18\n  }\n});\nexport default Loginscreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","Alert","useAuth","useNavigation","jsx","_jsx","jsxs","_jsxs","Loginscreen","_useAuth","signIn","navigation","_useState","email","password","_useState2","_slicedToArray","credentials","setCredentials","onPressLogin","_ref","_asyncToGenerator","alert","navigate","error","code","apply","arguments","onPressForgotPassword","onPressSignUp","style","styles","container","children","title","inputView","inputText","emailInput","placeholder","placeholderTextColor","onChangeText","text","_objectSpread","passwordInput","secureTextEntry","onPress","forgotAndSignUpText","loginBtn","loginText","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop"],"sources":["D:/MASOOD UNI/wheelhub/screens/Loginscreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Alert } from 'react-native';\r\nimport useAuth from '../hooks/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Loginscreen = () => {\r\n  const { signIn } = useAuth();\r\n  const navigation = useNavigation();\r\n  \r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const onPressLogin = async () => {\r\n    try {\r\n      // Check if email or password is empty\r\n      if (!credentials.email || !credentials.password) {\r\n        Alert.alert('Invalid Input', 'Please enter both email and password.');\r\n        return;\r\n      }\r\n  \r\n      await signIn(credentials.email, credentials.password);\r\n      // Navigate to the home page upon successful login\r\n      navigation.navigate('Home');\r\n    } catch (error) {\r\n      if (error.code === 'auth/invalid-credential') {\r\n        Alert.alert('Login Failed', 'Invalid email or password. Please check your credentials and try again.');\r\n      } else {\r\n        Alert.alert('Login Failed', 'An unexpected error occurred. Please try again later.');\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const onPressForgotPassword = () => {\r\n    // Implement your forgot password logic here\r\n  };\r\n\r\n  const onPressSignUp = () => {\r\n    // Navigate to the sign-up page\r\n    navigation.navigate('SignUp');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Login Screen</Text>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={[styles.inputText, styles.emailInput]}\r\n          placeholder=\"Email\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(text) => setCredentials({ ...credentials, email: text })}\r\n        />\r\n      </View>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={[styles.inputText, styles.passwordInput]}\r\n          secureTextEntry\r\n          placeholder=\"Password\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(text) => setCredentials({ ...credentials, password: text })}\r\n        />\r\n      </View>\r\n      <TouchableOpacity onPress={onPressForgotPassword}>\r\n        <Text style={styles.forgotAndSignUpText}>Forgot Password?</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={onPressLogin} style={styles.loginBtn}>\r\n        <Text style={styles.loginText}>LOGIN</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={onPressSignUp}>\r\n        <Text style={styles.forgotAndSignUpText}>Signup</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n  flex: 1,\r\n  backgroundColor: '#4FD3DA',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  },\r\n  title:{\r\n  fontWeight: \"bold\",\r\n  fontSize:50,\r\n  color:\"#fb5b5a\",\r\n  marginBottom: 40,\r\n  },\r\n  inputView:{\r\n  width:\"80%\",\r\n  backgroundColor:\"#3AB4BA\",\r\n  borderRadius:25,\r\n  height:50,\r\n  marginBottom:20,\r\n  justifyContent:\"center\",\r\n  padding:20\r\n  },\r\n  inputText:{\r\n  height:50,\r\n  color:\"white\"\r\n  },\r\n  forgotAndSignUpText:{\r\n  color:\"white\",\r\n  fontSize:30,\r\n  },\r\n  loginBtn:{\r\n  width:\"80%\",\r\n  backgroundColor:\"#fb5b5a\",\r\n  borderRadius:25,\r\n  height:50,\r\n  alignItems:\"center\",\r\n  justifyContent:\"center\",\r\n  marginTop:40,\r\n  marginBottom:10\r\n  },\r\n  emailInput: {\r\n      fontSize: 18, \r\n      },\r\n  passwordInput: {\r\n       fontSize: 18, \r\n    },\r\n  });\r\n\r\nexport default Loginscreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}