{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useAuth from \"../hooks/auth\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useAuth = useAuth(),\n    signIn = _useAuth.signIn,\n    loading = _useAuth.loading;\n  var navigation = useNavigation();\n  var _useState = useState({\n      email: '',\n      password: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    credentials = _useState2[0],\n    setCredentials = _useState2[1];\n  var onPressLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        if (!credentials.email || !credentials.password) {\n          Alert.alert('Invalid Input', 'Please enter both email and password.');\n          return;\n        }\n        yield signIn(credentials.email, credentials.password);\n        navigation.navigate('Home');\n      } catch (error) {\n        if (error.code === 'auth/invalid-credential') {\n          Alert.alert('Login Failed', 'Invalid email or password. Please check your credentials and try again.');\n        } else {\n          Alert.alert('Login Failed', 'An unexpected error occurred. Please try again later.');\n        }\n      }\n    });\n    return function onPressLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var onPressForgotPassword = function onPressForgotPassword() {};\n  var onPressSignUp = function onPressSignUp() {\n    navigation.navigate('SignUp');\n  };\n  return _jsx(ImageBackground, {\n    source: {\n      uri: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6yT2sLJU6tTGHhWzCmWu-7ZJQxXTjj3_QdYG-U_AO68xEb9_VoO0Ey_Nmzm2ECrAtdEc&usqp=CAU'\n    },\n    style: styles.background,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Login Screen\"\n        }), _jsx(View, {\n          style: styles.inputView,\n          children: _jsx(TextInput, {\n            style: styles.inputText,\n            placeholder: \"Email\",\n            placeholderTextColor: \"#003f5c\",\n            onChangeText: function onChangeText(text) {\n              return setCredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n                email: text\n              }));\n            }\n          })\n        }), _jsx(View, {\n          style: styles.inputView,\n          children: _jsx(TextInput, {\n            style: styles.inputText,\n            secureTextEntry: true,\n            placeholder: \"Password\",\n            placeholderTextColor: \"#003f5c\",\n            onChangeText: function onChangeText(text) {\n              return setCredentials(_objectSpread(_objectSpread({}, credentials), {}, {\n                password: text\n              }));\n            }\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: onPressForgotPassword,\n          children: _jsx(Text, {\n            style: styles.forgotAndSignUpText,\n            children: \"Forgot Password?\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: onPressLogin,\n          style: styles.loginBtn,\n          children: loading ? _jsx(ActivityIndicator, {\n            size: \"small\",\n            color: \"white\"\n          }) : _jsx(Text, {\n            style: styles.loginText,\n            children: \"LOGIN\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: onPressSignUp,\n          children: _jsx(Text, {\n            style: styles.forgotAndSignUpText,\n            children: \"Signup\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  formContainer: {\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: 25,\n    padding: 20,\n    width: '80%',\n    alignItems: 'center'\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#fb5b5a',\n    marginBottom: 20\n  },\n  inputView: {\n    width: '80%',\n    backgroundColor: '#3AB4BA',\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: 'center',\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: 'white',\n    fontSize: 18\n  },\n  forgotAndSignUpText: {\n    color: 'white',\n    fontSize: 20\n  },\n  loginBtn: {\n    width: '80%',\n    backgroundColor: '#fb5b5a',\n    borderRadius: 25,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n    marginBottom: 10\n  },\n  loginText: {\n    fontSize: 20,\n    color: 'white'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","ImageBackground","TouchableOpacity","Alert","ActivityIndicator","StyleSheet","useAuth","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useAuth","signIn","loading","navigation","_useState","email","password","_useState2","_slicedToArray","credentials","setCredentials","onPressLogin","_ref","_asyncToGenerator","alert","navigate","error","code","apply","arguments","onPressForgotPassword","onPressSignUp","source","uri","style","styles","background","children","container","formContainer","title","inputView","inputText","placeholder","placeholderTextColor","onChangeText","text","_objectSpread","secureTextEntry","onPress","forgotAndSignUpText","loginBtn","size","color","loginText","create","flex","width","height","alignItems","justifyContent","flexDirection","backgroundColor","borderRadius","padding","fontWeight","fontSize","marginBottom","marginTop"],"sources":["D:/MASOOD UNI/wheelhub/screens/Loginscreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, ImageBackground, TouchableOpacity, Alert, ActivityIndicator } from 'react-native';\r\nimport { StyleSheet } from 'react-native';\r\nimport useAuth from '../hooks/auth';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst LoginScreen = () => {\r\n  const { signIn, loading } = useAuth();\r\n  const navigation = useNavigation();\r\n  const [credentials, setCredentials] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const onPressLogin = async () => {\r\n    try {\r\n      if (!credentials.email || !credentials.password) {\r\n        Alert.alert('Invalid Input', 'Please enter both email and password.');\r\n        return;\r\n      }\r\n\r\n      await signIn(credentials.email, credentials.password);\r\n      navigation.navigate('Home');\r\n    } catch (error) {\r\n      if (error.code === 'auth/invalid-credential') {\r\n        Alert.alert('Login Failed', 'Invalid email or password. Please check your credentials and try again.');\r\n      } else {\r\n        Alert.alert('Login Failed', 'An unexpected error occurred. Please try again later.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const onPressForgotPassword = () => {\r\n    // Implement your forgot password logic here\r\n  };\r\n\r\n  const onPressSignUp = () => {\r\n    navigation.navigate('SignUp');\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6yT2sLJU6tTGHhWzCmWu-7ZJQxXTjj3_QdYG-U_AO68xEb9_VoO0Ey_Nmzm2ECrAtdEc&usqp=CAU' }}\r\n      style={styles.background}\r\n    >\r\n      <View style={styles.container}>\r\n        <View style={styles.formContainer}>\r\n          <Text style={styles.title}>Login Screen</Text>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.inputText}\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"#003f5c\"\r\n              onChangeText={(text) => setCredentials({ ...credentials, email: text })}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.inputText}\r\n              secureTextEntry\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"#003f5c\"\r\n              onChangeText={(text) => setCredentials({ ...credentials, password: text })}\r\n            />\r\n          </View>\r\n          <TouchableOpacity onPress={onPressForgotPassword}>\r\n            <Text style={styles.forgotAndSignUpText}>Forgot Password?</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={onPressLogin} style={styles.loginBtn}>\r\n            {loading ? (\r\n              <ActivityIndicator size=\"small\" color=\"white\" />\r\n            ) : (\r\n              <Text style={styles.loginText}>LOGIN</Text>\r\n            )}\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={onPressSignUp}>\r\n            <Text style={styles.forgotAndSignUpText}>Signup</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  formContainer: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    borderRadius: 25,\r\n    padding: 20,\r\n    width: '80%',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 30,\r\n    color: '#fb5b5a',\r\n    marginBottom: 20,\r\n  },\r\n  inputView: {\r\n    width: '80%',\r\n    backgroundColor: '#3AB4BA',\r\n    borderRadius: 25,\r\n    height: 50,\r\n    marginBottom: 20,\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  inputText: {\r\n    height: 50,\r\n    color: 'white',\r\n    fontSize: 18,\r\n  },\r\n  forgotAndSignUpText: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n  },\r\n  loginBtn: {\r\n    width: '80%',\r\n    backgroundColor: '#fb5b5a',\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  loginText: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}