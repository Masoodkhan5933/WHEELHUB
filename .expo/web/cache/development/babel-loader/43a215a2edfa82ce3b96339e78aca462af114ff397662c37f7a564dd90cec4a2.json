{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { responsiveFontSize } from 'react-native-responsive-dimensions';\nimport Firestore from \"../hooks/firestore\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Storage from \"../hooks/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CarForm = function CarForm() {\n  var _useState = useState({\n      carName: '',\n      registeredYear: '',\n      modelYear: '',\n      mileage: '',\n      city: '',\n      province: '',\n      make: '',\n      registeredCity: '',\n      transmission: '',\n      color: '',\n      bodyType: '',\n      seatingCapacity: '',\n      engineCapacity: '',\n      image: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    carData = _useState2[0],\n    setCarData = _useState2[1];\n  var _Firestore = Firestore(),\n    addCar = _Firestore.addCar;\n  var _Storage = Storage(),\n    uploadCarPictures = _Storage.uploadCarPictures;\n  var handleInputChange = function handleInputChange(field, value) {\n    setCarData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleImagePicker = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (!permissionResult.granted) {\n          alert('Permission to access camera roll is required!');\n          return;\n        }\n        var pickerResult = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [4, 3],\n          quality: 1\n        });\n        console.log(pickerResult.assets[0].uri);\n        if (!pickerResult.canceled) {\n          var newPath = FileSystem.documentDirectory + 'tempImage.jpg';\n          yield FileSystem.copyAsync({\n            from: pickerResult.assets[0].uri,\n            to: newPath\n          });\n          setCarData(function (prevData) {\n            return _objectSpread(_objectSpread({}, prevData), {}, {\n              image: newPath\n            });\n          });\n          console.log(newPath);\n        }\n      } catch (error) {\n        console.error('Error picking image:', error);\n        alert('Failed to pick image');\n      }\n    });\n    return function handleImagePicker() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleAddCar = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var ImageUrl = yield uploadCarPictures(carData.image);\n        var finalData = _objectSpread(_objectSpread({}, carData), {}, {\n          image: ImageUrl\n        });\n        yield addCar(finalData);\n        console.log('Car added successfully');\n      } catch (error) {\n        console.error('Error adding car:', error);\n        console.log('Firebase Storage Error:', error);\n      }\n    });\n    return function handleAddCar() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Add Car\"\n    }), Object.entries(carData).map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        field = _ref4[0],\n        value = _ref4[1];\n      return _jsx(TextInput, {\n        style: styles.input,\n        placeholder: field.charAt(0).toUpperCase() + field.slice(1),\n        value: value,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(field, text);\n        }\n      }, field);\n    }), _jsx(Button, {\n      title: \"Select Image\",\n      onPress: handleImagePicker\n    }), carData.image && _jsx(Image, {\n      source: {\n        uri: carData.image\n      },\n      style: styles.imagePreview\n    }), carData.image && _jsx(Button, {\n      title: \"Remove Image\",\n      onPress: function onPress() {\n        return handleInputChange('image', null);\n      }\n    }), _jsx(Button, {\n      title: \"Add Car\",\n      onPress: handleAddCar\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  heading: {\n    fontSize: responsiveFontSize(2.5),\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    padding: 8\n  },\n  imagePreview: {\n    width: '100%',\n    height: 200,\n    marginTop: 12,\n    marginBottom: 12,\n    borderRadius: 8\n  }\n});\nexport default CarForm;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Image","responsiveFontSize","Firestore","ImagePicker","FileSystem","ScrollView","Storage","jsx","_jsx","jsxs","_jsxs","CarForm","_useState","carName","registeredYear","modelYear","mileage","city","province","make","registeredCity","transmission","color","bodyType","seatingCapacity","engineCapacity","image","_useState2","_slicedToArray","carData","setCarData","_Firestore","addCar","_Storage","uploadCarPictures","handleInputChange","field","value","prevData","_objectSpread","_defineProperty","handleImagePicker","_ref","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","console","log","assets","uri","canceled","newPath","documentDirectory","copyAsync","from","to","error","apply","arguments","handleAddCar","_ref2","ImageUrl","finalData","style","styles","container","children","heading","Object","entries","map","_ref3","_ref4","input","placeholder","charAt","toUpperCase","slice","onChangeText","text","title","onPress","source","imagePreview","create","padding","fontSize","fontWeight","marginBottom","height","borderColor","borderWidth","width","marginTop","borderRadius"],"sources":["D:/MASOOD UNI/wheelhub/screens/addcar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, Image } from 'react-native';\r\nimport { responsiveFontSize } from 'react-native-responsive-dimensions';\r\nimport Firestore from '../hooks/firestore';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { ScrollView } from 'react-native';\r\nimport Storage from '../hooks/storage';\r\n\r\nconst CarForm = () => {\r\n  const [carData, setCarData] = useState({\r\n    carName: '',\r\n    registeredYear: '',\r\n    modelYear: '',\r\n    mileage: '',\r\n    city: '',\r\n    province: '',\r\n    make: '',\r\n    registeredCity: '',\r\n    transmission: '',\r\n    color: '',\r\n    bodyType: '',\r\n    seatingCapacity: '',\r\n    engineCapacity: '',\r\n    image: null, // Updated to store the image\r\n  });\r\n\r\n  const { addCar } = Firestore();\r\n  const { uploadCarPictures } = Storage();\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setCarData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleImagePicker = async () => {\r\n    try {\r\n      // Ask for permission\r\n      const permissionResult =\r\n        await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      if (!permissionResult.granted) {\r\n        alert('Permission to access camera roll is required!');\r\n        return;\r\n      }\r\n\r\n      const pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n      });\r\n\r\n      console.log(pickerResult.assets[0].uri);\r\n      if (!pickerResult.canceled) {\r\n        const newPath = FileSystem.documentDirectory + 'tempImage.jpg';\r\n        await FileSystem.copyAsync({\r\n          from: pickerResult.assets[0].uri,\r\n          to: newPath,\r\n        });\r\n\r\n        setCarData((prevData) => ({\r\n          ...prevData,\r\n          image: newPath,\r\n        }));\r\n        console.log(newPath);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error picking image:', error);\r\n      alert('Failed to pick image');\r\n    }\r\n  };\r\n\r\n  const handleAddCar = async () => {\r\n    try {\r\n      const ImageUrl = await uploadCarPictures(carData.image);\r\n      const finalData = { ...carData, image: ImageUrl };\r\n  \r\n      await addCar(finalData);\r\n      console.log('Car added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding car:', error);\r\n  \r\n      // Log the complete error object\r\n      console.log('Firebase Storage Error:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.heading}>Add Car</Text>\r\n\r\n      {/* Display selected image */}\r\n\r\n      {/* Input fields */}\r\n      {Object.entries(carData).map(([field, value]) => (\r\n        <TextInput\r\n          key={field}\r\n          style={styles.input}\r\n          placeholder={field.charAt(0).toUpperCase() + field.slice(1)}\r\n          value={value}\r\n          onChangeText={(text) => handleInputChange(field, text)}\r\n        />\r\n      ))}\r\n\r\n      {/* Image picker button */}\r\n      <Button title='Select Image' onPress={handleImagePicker} />\r\n\r\n      {carData.image && (\r\n        <Image source={{ uri: carData.image }} style={styles.imagePreview} />\r\n      )}\r\n\r\n      {carData.image && (\r\n        <Button\r\n          title='Remove Image'\r\n          onPress={() => handleInputChange('image', null)}\r\n        />\r\n      )}\r\n\r\n      {/* Submit Button */}\r\n      <Button title='Add Car' onPress={handleAddCar} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n  },\r\n  heading: {\r\n    fontSize: responsiveFontSize(2.5),\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 12,\r\n    padding: 8,\r\n  },\r\n  imagePreview: {\r\n    width: '100%',\r\n    height: 200,\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n    borderRadius: 8,\r\n  },\r\n});\r\n\r\nexport default CarForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}