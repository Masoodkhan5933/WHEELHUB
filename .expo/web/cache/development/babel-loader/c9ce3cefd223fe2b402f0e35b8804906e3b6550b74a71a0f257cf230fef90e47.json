{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { responsiveFontSize } from 'react-native-responsive-dimensions';\nimport ImagePicker from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CarForm = function CarForm() {\n  var _useState = useState({\n      carName: '',\n      registeredYear: '',\n      modelYear: '',\n      mileage: '',\n      city: '',\n      province: '',\n      make: '',\n      registeredCity: '',\n      transmission: '',\n      color: '',\n      bodyType: '',\n      seatingCapacity: '',\n      engineCapacity: '',\n      image: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    carData = _useState2[0],\n    setCarData = _useState2[1];\n  var _Firestore = Firestore(),\n    addCar = _Firestore.addCar;\n  var handleInputChange = function handleInputChange(field, value) {\n    setCarData(function (prevData) {\n      return _objectSpread(_objectSpread({}, prevData), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleImagePicker = function handleImagePicker() {\n    var options = {\n      title: 'Select Image',\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n      }\n    };\n    ImagePicker.showImagePicker(options, function (response) {\n      if (!response.didCancel && !response.error && !response.customButton) {\n        setCarData(function (prevData) {\n          return _objectSpread(_objectSpread({}, prevData), {}, {\n            image: response.uri\n          });\n        });\n      }\n    });\n  };\n  var handleAddCar = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield addCar(carData);\n        console.log('Car added successfully');\n      } catch (error) {\n        console.error('Error adding car:', error);\n      }\n    });\n    return function handleAddCar() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Add Car\"\n    }), carData.image && _jsx(Image, {\n      source: {\n        uri: carData.image\n      },\n      style: styles.imagePreview\n    }), Object.entries(carData).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        field = _ref3[0],\n        value = _ref3[1];\n      return _jsx(TextInput, {\n        style: styles.input,\n        placeholder: field.charAt(0).toUpperCase() + field.slice(1),\n        value: value,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(field, text);\n        }\n      }, field);\n    }), _jsx(Button, {\n      title: \"Select Image\",\n      onPress: handleImagePicker\n    }), _jsx(Button, {\n      title: \"Add Car\",\n      onPress: handleAddCar\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  heading: {\n    fontSize: responsiveFontSize(2.5),\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    padding: 8\n  },\n  imagePreview: {\n    width: '100%',\n    height: 200,\n    marginTop: 12,\n    marginBottom: 12,\n    borderRadius: 8\n  }\n});\nexport default CarForm;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Image","responsiveFontSize","ImagePicker","jsx","_jsx","jsxs","_jsxs","CarForm","_useState","carName","registeredYear","modelYear","mileage","city","province","make","registeredCity","transmission","color","bodyType","seatingCapacity","engineCapacity","image","_useState2","_slicedToArray","carData","setCarData","_Firestore","Firestore","addCar","handleInputChange","field","value","prevData","_objectSpread","_defineProperty","handleImagePicker","options","title","storageOptions","skipBackup","path","showImagePicker","response","didCancel","error","customButton","uri","handleAddCar","_ref","_asyncToGenerator","console","log","apply","arguments","style","styles","container","children","heading","source","imagePreview","Object","entries","map","_ref2","_ref3","input","placeholder","charAt","toUpperCase","slice","onChangeText","text","onPress","create","padding","fontSize","fontWeight","marginBottom","height","borderColor","borderWidth","width","marginTop","borderRadius"],"sources":["D:/MASOOD UNI/wheelhub/screens/addcar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, Image } from 'react-native';\r\nimport { responsiveFontSize } from 'react-native-responsive-dimensions';\r\nimport ImagePicker from 'react-native-image-picker'; // Import image picker\r\n// import Firestore from '../hooks/firestore';\r\n\r\nconst CarForm = () => {\r\n  const [carData, setCarData] = useState({\r\n    carName: '',\r\n    registeredYear: '',\r\n    modelYear: '',\r\n    mileage: '',\r\n    city: '',\r\n    province: '',\r\n    make: '',\r\n    registeredCity: '',\r\n    transmission: '',\r\n    color: '',\r\n    bodyType: '',\r\n    seatingCapacity: '',\r\n    engineCapacity: '',\r\n    image: null, // Updated to store the image\r\n  });\r\n\r\n  const { addCar } = Firestore();\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setCarData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleImagePicker = () => {\r\n    const options = {\r\n      title: 'Select Image',\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    ImagePicker.showImagePicker(options, (response) => {\r\n      if (!response.didCancel && !response.error && !response.customButton) {\r\n        setCarData((prevData) => ({\r\n          ...prevData,\r\n          image: response.uri,\r\n        }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAddCar = async () => {\r\n    try {\r\n      await addCar(carData);\r\n      console.log('Car added successfully');\r\n\r\n      // TODO: Handle any additional logic or navigation after adding the car\r\n    } catch (error) {\r\n      console.error('Error adding car:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Add Car</Text>\r\n\r\n      {/* Display selected image */}\r\n      {carData.image && <Image source={{ uri: carData.image }} style={styles.imagePreview} />}\r\n\r\n      {/* Input fields */}\r\n      {Object.entries(carData).map(([field, value]) => (\r\n        <TextInput\r\n          key={field}\r\n          style={styles.input}\r\n          placeholder={field.charAt(0).toUpperCase() + field.slice(1)}\r\n          value={value}\r\n          onChangeText={(text) => handleInputChange(field, text)}\r\n        />\r\n      ))}\r\n\r\n      {/* Image picker button */}\r\n      <Button title=\"Select Image\" onPress={handleImagePicker} />\r\n\r\n      {/* Submit Button */}\r\n      <Button title=\"Add Car\" onPress={handleAddCar} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n  },\r\n  heading: {\r\n    fontSize: responsiveFontSize(2.5),\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 12,\r\n    padding: 8,\r\n  },\r\n  imagePreview: {\r\n    width: '100%',\r\n    height: 200,\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n    borderRadius: 8,\r\n  },\r\n});\r\n\r\nexport default CarForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}